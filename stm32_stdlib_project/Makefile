##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.2.0] date: [Sun Jun 30 02:23:42 CST 2019]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = stm32_test


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
$(shell find ./ -name '*.c')
# user/main.c \
# user/stm32f10x_it.c \
# libraries/src/misc.c \
# libraries/src/stm32f10x_adc.c \
# libraries/src/stm32f10x_bkp.c \
# libraries/src/stm32f10x_can.c \
# libraries/src/stm32f10x_cec.c \
# libraries/src/stm32f10x_crc.c \
# libraries/src/stm32f10x_dac.c \
# libraries/src/stm32f10x_dbgmcu.c \
# libraries/src/stm32f10x_dma.c \
# libraries/src/stm32f10x_exti.c \
# libraries/src/stm32f10x_flash.c \
# libraries/src/stm32f10x_fsmc.c \
# libraries/src/stm32f10x_gpio.c \
# libraries/src/stm32f10x_i2c.c \
# libraries/src/stm32f10x_iwdg.c \
# libraries/src/stm32f10x_pwr.c \
# libraries/src/stm32f10x_rcc.c \
# libraries/src/stm32f10x_rtc.c \
# libraries/src/stm32f10x_sdio.c \
# libraries/src/stm32f10x_spi.c \
# libraries/src/stm32f10x_tim.c \
# libraries/src/stm32f10x_usart.c \
# libraries/src/stm32f10x_wwdg.c \
# cmsis/system_stm32f10x.c  

# ASM sources
ASM_SOURCES =  \
startup/startup_stm32f10x_hd.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m3

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_STDPERIPH_DRIVER \
-DHSE_VALUE=8000000 \
-DLSE_STARTUP_TIMEOUT=5000 \
-DLSE_VALUE=32768 \
-DLSI_VALUE=40000 \
-DVDD_VALUE=3300 \
-DPREFETCH_ENABLE=1 \
-DSTM32F10X_HD

# Defined in stm32f10x.h
# -DHSE_STARTUP_TIMEOUT=100 \
# -DHSI_VALUE=8000000 \

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-Iuser \
-Icmsis \
-Ilibraries/inc \
-Imodule/inc 


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = stm32_flash.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLOAT= -lc -lrdimon -u _printf_float
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections $(LDFLOAT) 

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	echo "Cæ–‡ä»¶ = "$(C_SOURCES)
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -rf $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

#######################################
# openocd stlink-v2 download
#######################################
WORK_PWD=$(shell pwd)
INTERFACE_CFG=interface/stlink-v2.cfg
TARGET_CFG=target/stm32f1x.cfg
download:
	openocd -f $(INTERFACE_CFG) -f $(TARGET_CFG) -c init -c halt -c "flash write_image erase $(WORK_PWD)/$(BUILD_DIR)/$(TARGET).hex" -c reset -c shutdown
